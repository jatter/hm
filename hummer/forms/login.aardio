import win.ui;
import debug;
import debug.log;
import web.form.sockpuppet;
import console;
import io;
/*DSG{{*/
var winform = win.form(text="aardio form";right=939;bottom=772;bgcolor=16777215)
winform.add(
btnCancel={cls="button";text="取消";left=759;top=678;right=848;bottom=738;ah=1;aw=1;z=2};
btnDel={cls="button";text="删除";left=570;top=678;right=659;bottom=738;ah=1;aw=1;z=1};
btnLogin={cls="button";text="登录";left=184;top=420;right=394;bottom=480;ah=1;aw=1;db=0.38;dl=0.2;dr=0.58;dt=0.54;tabstop=1;z=3};
customWeb={cls="custom";left=37;top=25;right=569;bottom=657;bgcolor=16777215;db=1;dl=1;dr=1;dt=1;hide=1;repeat="center";z=10};
editPassword={cls="edit";left=184;top=278;right=398;bottom=338;ah=1;autohscroll=false;autovscroll=false;aw=1;db=0.56;dl=0.2;dr=0.58;dt=0.36;edge=1;font=LOGFONT(h=-19);multiline=1;password=1;tabstop=1;z=9};
editUserName={cls="edit";left=184;top=186;right=398;bottom=246;ah=1;autohscroll=false;autovscroll=false;aw=1;db=0.68;dl=0.2;dr=0.58;dt=0.24;edge=1;font=LOGFONT(h=-19);multiline=1;tabstop=1;z=8};
gbLogin={cls="groupbox";text="登录";left=8;top=17;right=505;bottom=645;ah=1;aw=1;edge=1;z=4};
labUserName={cls="static";text="淘宝帐号：";left=101;top=199;right=188;bottom=228;db=0.71;dl=0.11;dr=0.8;dt=0.26;notify=1;transparent=1;z=5};
labloginMessage={cls="static";left=217;top=360;right=368;bottom=397;color=255;transparent=1;z=11};
labpwd={cls="static";text="密码：";left=102;top=291;right=184;bottom=325;db=0.58;dl=0.11;dr=0.8;dt=0.38;transparent=1;z=6};
listview={cls="listview";left=511;top=24;right=934;bottom=645;ah=1;aw=1;db=0.17;dl=0.54;dt=0.03;edge=1;z=7}
)
/*}}*/

import sqlite;
var db = sqlite("/hummer.dll");//打开数据库连接

//动态表格
winform.listview.insertColumn("用户编号",86);
winform.listview.insertColumn("会员名",109);
winform.listview.insertColumn("",1);
winform.listview.insertColumn("状态",40);
winform.listview.insertColumn("登录时间",110);

winform.listview.setExtended(0x4/*_LVS_EX_CHECKBOXES*/);
winform.listview.setExtended(0x20/*_LVS_EX_FULLROWSELECT*/);
winform.listview.setExtended(0x8000000/*_LVS_EX_AUTOCHECKSELECT*/);

//动态表格操作事迹
winform.listview.onnotify = function(id,code,ptr){
    select(code) {
        case 0xFFFFFFFD/*_NM_DBLCLK*/ {
            if(string.trim(winform.labloginMessage.text) == ""){
               var nm = winform.listview.getNotifyMessage(code,ptr);
               winform.editUserName.text = winform.listview.getItemText(nm.iItem,2);
	           winform.editPassword.text = winform.listview.getItemText(nm.iItem,3);
            } 
        }
    } 
}

//删除动态表格用户选择项
winform.btnDel.oncommand = function(id,event){
    var count = winform.listview.count;
    for(i=count;1;-1){
        if(winform.listview.getChecked(i)){
           deleteLoginInfo(winform.listview.getItemText(i,2));
           winform.listview.delItem(i); 
		}
    }
}

//取消用户选择项
winform.btnCancel.oncommand = function(id,event){
    var count = winform.listview.count;
    for(i=1;count;1){
         winform.listview.setChecked(i,false);
    }
}

//用户名输入框回车
winform.editUserName.translateAccelerator = function( msg ){
   if( msg.wParam == 0xD/*_VK_ENTER*/ ){
        if( msg.message == 0x101/*_WM_KEYUP*/ ){
            win.setFocus(winform.editPassword.hwnd);
        }
        return true;
    }
}

//密码输入框回车
winform.editPassword.translateAccelerator = function( msg ){
   if( msg.wParam == 0xD/*_VK_ENTER*/ ){
        if( msg.message == 0x101/*_WM_KEYUP*/ ){
            winform.btnLogin.oncommand();
        }
        return true;
    }
}

//创建web窗体
var loginWeb = web.form.sockpuppet( winform.customWeb 
     ,0x8/*_UIFLAG_SCROLL_NO 禁用滚动条*/
     ,//可输入_DLCTL_ 前缀的常量以控制下载行为
     ,//"USER AGENT"
     );
loginWeb.noScriptErr=true; 
var isLocalSuccessLogin = false; //是否本地成功登录

//页面跳转完成
loginWeb.NavigateComplete2 = function(pDisp, url) {
    if(isLocalSuccessLogin && "https://www.taobao.com/" == url){
       winform.customWeb.hide=1;
    }	
}

//页面加载完成
loginWeb.ProgressChange = function( progress, progressMax ) {
    if(isLocalSuccessLogin && loginWeb.getEle("J_SiteNavLoginPanel")){
        winform.customWeb.hide=1;
    }
    if( ( progress < 0 ) || ( progress >= progressMax ) ){
        //账号管理面板
    	var loginPanelEle = loginWeb.getEle("J_SiteNavLoginPanel");
    	//查看你的专属权益
    	var equityEle = loginWeb.queryEles({innerHTML="查看你的专属权益"; tagName="^A$";className="site-nav-user-privilege"}, 1000);
    	//登录成功
        if(loginPanelEle && equityEle && isLocalSuccessLogin){ 
            winform.customWeb.hide=1;
            winform.labloginMessage.text = "登录成功";
            disableLoginPanel();
        }
    } 
 }

//登录按钮
winform.btnLogin.oncommand = function(id,event){
    winform.labloginMessage.text = "";
    isLocalSuccessLogin = false;  
	var userName = winform.editUserName.text;
	var password = winform.editPassword.text;
	if("" == userName || "" == string.trim(userName)){
		win.msgbox("用户名为空,请输入");
		 win.setFocus(winform.editUserName.hwnd);
		return ; 
	}
	if("" == password || "" == string.trim(password)){
		win.msgbox("密码为空,请输入");
		win.setFocus(winform.editPassword.hwnd);
		return ; 
	}

    loginWeb.go("https://www.taobao.com/");
    loginWeb.wait(,2000);
	loginWeb.waitQueryEles({innerHTML="亲，请登录"; tagName="^A$";className="h"}).click();
	loginWeb.wait(,1000);
	loginWeb.scrollPos(,-1,200);
	//点击密码登录链接
	var passwordLoginElement = loginWeb.queryEles({innerHTML="密码登录"; tagName="^A$";className="forget-pwd J_Quick2Static"}, 3000);
	passwordLoginElement.click();
    
	//获取用户名，密码控件
	var usernameEle = loginWeb.getEle("TPL_username_1"); 
	var passwordEle = loginWeb.getEle("TPL_password_1");
	usernameEle.value = userName;
	passwordEle.value = password;
	
    loginWeb.getEle("J_SubmitStatic").click();
    loginWeb.wait(,2000);
    loginWeb.scrollPos(,-1,200);
    //loginWeb.static.setPos(-80,-200,1000,1000) 
    //loginWeb.static.setParent( winform.staticParent );

    if("login.taobao.com" == loginWeb.host){
        winform.customWeb.hide=0;
        hideLoginPanel();
        //console.log("userName password:"+userName+",,"+password);
        
	    var nameEle = loginWeb.getEle("TPL_username_1");
	    if(nameEle){
	      nameEle.setAttribute("value",userName);
	    }
	   
	    var pwdEle = loginWeb.getEle("TPL_password_1");
	    if(pwdEle){
	      pwdEle.setAttribute("value",password);
	    }

	    isLocalSuccessLogin = true;
		var x,y,cx,cy = loginWeb.scrollPos();
        //调整窗口到网页实际高度
        loginWeb.scrollPos(,-1,200);
        
        /**
        var ele = wb.waitQueryEles(innerHTML='@<DIV class=personal-info-pic><A href="http://jiang';tagName="DIV";className="personal-info");
        if(ele){
                var ele = wb.queryEles(innerHTML="@领取<SPAN class=yellow>";
                tagName="^A$";
                href="@http://taojinbi.taobao.com/home/home_new.htm#";
                className="getcoin-btn J_CoinGrantBtn"
                ).click();
        }
        **/
        
        //console.log("loginWeb.body:"+loginWeb.body);
        //console.pause();
    }
    //process.execute("hummer.dat");
	//console.log("return body:"+loginWeb.body);
  
	//import process;
    //var prcs = process( io._exepath )
    //purchaseForm,purchaseWeb = winform.loadForm("\forms\purchase.aardio");
    //purchaseWeb.show();
    //winform.close();
    
}

//设置不可用登录组件
disableLoginPanel = function(){
        winform.editPassword.hide=false;
        winform.editUserName.hide=false;
        winform.labUserName.hide=false;
        winform.labpwd.hide=false;
        winform.btnLogin.hide=false; 
        winform.editUserName.disabled = true;
	    winform.editPassword.disabled = true;
	    winform.btnLogin.disabled = true;
}

//隐藏登录组件
hideLoginPanel = function(){
    winform.editPassword.hide=true;
    winform.editUserName.hide=true;
    winform.labUserName.hide=true;
    winform.labpwd.hide=true;
    winform.btnLogin.hide=true; 
}

//查询登录用户信息
queryLoginInfo = function(){
    winform.listview.clear();
    //迭代方式查询数据 
	for user_id,user_name,user_pwd,login_status,login_time,remark in db.each("SELECT user_id,user_name,user_pwd,login_status,login_time,remark from [login_info] ORDER BY login_time DESC") {
      winform.listview.addItem({user_id; user_name; user_pwd; login_status=="0"?"在线":"下线";login_time});
	}
	winform.listview.insertColumn("",1);
}
queryLoginInfo();

//更新登录数据库操作
updateLoginInfo = function(){
    var result  = db.stepQuery("SELECT * FROM [工作日志表]",{
        姓名 = mainForm.editUser.text;
    } )

    if(result){
        mainForm.editResult.print( result.姓名 );
        mainForm.editResult.print( result.工作地点 );
        mainForm.editResult.print( result.时间 );
    }
}

//更新登录数据库操作
deleteLoginInfo = function(userName){
    db.exec("DELETE FROM [%s] WHERE user_name='%s';","login_info",userName);
}

//同步系统当时网络标准时间
setSystemLocalTime = function(){
	import wsock;
	import wsock.err;
	import time.ole;
	import console;
	
	// 初始化 Winsock.        
	if(! wsock.open() ){
        	io.print("打开wsock错误");
        	return;
	}
	
	//服务器首先启动,通过调用socket()建立一个套接口
	sSocket= wsock.socket(0x2/*_AF_INET*/,0x2/*_SOCK_DGRAM*/,0x11/*_IPPROTO_UDP*/)
	if( sSocket=_INVALID_SOCKET ){
        	io.print("服务端创建套接字错误");
        	wsock.close() //关闭wsock
        	return;
	}
	
	//设置发送,接收超时
	setTimeouts = function(hSocket,send=30000,receive=30000){
        	return ( ..wsock.setsockoptByInt(hSocket,0xFFFF/*_SOL_SOCKET*/,0x1005/*_SO_SNDTIMEO*/,send,4) == 0 )
                	&& ( ..wsock.setsockoptByInt(hSocket,0xFFFF/*_SOL_SOCKET*/,0x1006/*_SO_RCVTIMEO*/,receive,4)  == 0 ) 
	};
	setTimeouts(sSocket,3000,3000); 
	
	var service = wsock.sockaddr_in();
	service.sin_family = 0x2/*_AF_INET*/;
	service.sin_addr.S_un.S_addr = wsock.inet_addr(wsock.getIp("ntp1.aliyun.com"));
	service.sin_port = wsock.htons(123); 
	if( wsock.connect(sSocket,service,raw.sizeof(service) ) == -1/*_SOCKET_ERROR*/ ){
        	console.log("连接出错",wsock.err.lasterr())
        	wsock.closesocket(sSocket)
        	wsock.close()
        	return;
	} 
	
	var data = '\x1b' ++ string.repeat(47,'\0');//构造UDP要发送的数据包，长度48位
	
	//发送数据并从已连接的套接字里接收数据
	var ret = wsock.send(sSocket,data,#data,0);
	if( ret < 0 ){
        	console.log("发送错误",wsock.err.lasterr() )
        	wsock.closesocket(sSocket)
        	wsock.close()
        	return;
	}
	
	var reads,recvbuf = wsock.recv(sSocket,1024,1024,0) 
	if( reads < 0 ){
        	console.log("读取错误",wsock.err.lasterr() )
        	wsock.closesocket(sSocket)
        	wsock.close()
        	return;
	}
	
	tab = {string.unpack(string.left(recvbuf,reads))};
	addstr = string.format("%X",tab[41])++string.format("%X",tab[42])++string.format("%X",tab[43])++string.format("%X",tab[44]);
	
	m = "0x"++string.left(addstr,#addstr-1)
	n = "0x"++string.right(addstr,1)
	
	//不是按时间戳中的格林威治时间计数，而是已1900年01月01日00时00分00秒起，所以要减去这70年间的总秒数
	addtm = string.format("%d",m)*16+string.format("%d",n)-2208988800;
	
	//待数据传送结束后,调用close()关闭套接口
	wsock.closesocket(sSocket)
	wsock.close()
	
	console.log(time(addtm,"%Y/%m/%d %H:%M:%S"),time.now())//格式时间输出
	
	
	tm = time.now()
    tm.addhour(2)
    console.dump(tm);
    
    
    import win.ui;
	import inet.http;
	import console;
	inet.clearCookie("time.ac.cn")
	var html = inet.http().get("http://www.time.ac.cn/stime.asp");
	var s1 = string.match(html,".+\(\'(.+)日\'\)\;");
	var s2 = string.match(html,"var hrs = (.\d)\;");
	var s3 = string.match(html,"var min = (.\d)\;");
	var s4 = string.match(html,"var sec = (.\d)\;");
	console.log(s1,s2,s3,s4)
	var tm=time.now()
	//取年月日
	tm.year,tm.month,tm.day = string.match(html,"(\d+)年(\d+)月(\d+)日");
	//取小时
	tm.hour = s2 +2
	//取分
	tm.minute = s3
	//取秒
	tm.second = s4
	//设置时间API
    	
	SetLocalTime = ::Kernel32.api("SetLocalTime","int(struct& lpSystemTime)")
	//修改系统时间
	SetLocalTime(tm);
	s1 = 23;
	console.log("2222222222222222");
	var txt="系统时间已同步为："+s1+"日"+s2+":"+s3+":"+s4
	//console.log(txt);
	
	win.msgboxTimeout(txt,"时间同步成功",3000)
	
	//console.pause(true)
}
//setSystemLocalTime();

tmid = winform.addtimer(
	10000/*毫秒*/,
	function(hwnd,msg,id,tick){//定时执行代码
		queryLoginInfo();
	}
);

winform.setFocus(winform.editUserName.hwnd);
winform.show();
win.loopMessage();
return winform;